<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.obo.mapper.AdoptMapper">
	<!-- 입양 신청한 동물 리스트 -->
	<select id="selectAdoptApplyList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			aa.adopt_apply_id AS adoptApplyId,
			a.animal_name AS animalName,
			aa.member_id AS memberId,
			m.member_name AS memberName,
			aa.adopt_apply_document_id AS adoptApplyDocumentId,
			aa.apply_date AS applyDate,
			COUNT(aa.adopt_apply_id) over() AS totalRow
		FROM adopt_apply AS aa, animal AS a, member AS m
		<where>
			aa.animal_id = a.animal_id AND aa.member_id = m.member_id AND a.shelter_id = #{shelterId}
			AND aa.apply_reject_date IS NULL
			AND (SELECT aa.adopt_apply_id FROM adopt AS ad WHERE ad.adopt_apply_id = aa.adopt_apply_id) IS NULL
			<if test="searchWord != null">
				AND a.animal_name LIKE CONCAT('%', #{searchWord},'%')
			</if>
		</where>
		ORDER BY applyDate DESC
		LIMIT #{beginRow}, #{rowPerPage};
	</select>
	
	<!-- 입양 완료된 동물 리스트 -->
	<select id="selectAdoptApprovalList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			aa.adopt_apply_id AS adoptApplyId,
			a.animal_category_id AS animalCategoryId,
			a.animal_id AS animalId,
			a.animal_name AS animalName,
			m.member_id AS memberId,
			m.member_name AS memberName,
			aa.adopt_apply_document_id AS adoptApplyDocumentId,
			DATE(aa.apply_date) AS applyDate,
			DATE(ad.adopt_date) AS adoptDate,
			ad.staff_id AS staffId,
			COUNT(aa.adopt_apply_id) over() AS totalRow
		FROM adopt AS ad, adopt_apply AS aa, animal AS a, member AS m
		<where>
			ad.adopt_apply_id = aa.adopt_apply_id 
			AND aa.animal_id = a.animal_id 
			AND aa.member_id = m.member_id 
			AND ad.adopt_apply_id IN (SELECT adopt_apply_id FROM adopt)
			AND a.shelter_id = #{shelterId}
			<if test="selectOption == 'animal'">
				AND a.animal_name LIKE CONCAT('%', #{searchWord},'%')
			</if>
			<if test="selectOption == 'member'">
				AND (m.member_name LIKE CONCAT('%', #{searchWord},'%') OR m.member_id LIKE CONCAT('%', #{searchWord},'%'))
			</if>
		</where>
		ORDER BY adoptDate DESC
		LIMIT #{beginRow}, #{rowPerPage};
	</select>
	
	<!-- 입양 거절된 동물 리스트 -->
	<select id="selectAdoptRejectList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			aa.adopt_apply_id AS adoptApplyId,
			a.animal_name AS animalName,
			m.member_name AS memberName,
			m.member_id AS memberId,
			aa.adopt_apply_document_id AS adoptApplyDocumentId,
			DATE(aa.apply_date) AS applyDate,
			DATE(aa.apply_reject_date) AS applyRejectDate,
			COUNT(aa.adopt_apply_id) over() AS totalRow
		FROM adopt_apply AS aa, animal AS a, member AS m
		<where>
			aa.animal_id = a.animal_id AND aa.member_id = m.member_id 
			AND aa.apply_reject_date IS NOT NULL AND a.shelter_id = #{shelterId}
			<if test="searchWord != null">
				AND a.animal_name LIKE CONCAT('%', #{searchWord},'%')
			</if>
		</where>	
		ORDER BY applyRejectDate DESC
		LIMIT #{beginRow}, #{rowPerPage};	
	</select>
	
	<!-- 입양 완료된 동물 목록 & 케어플랜 작성 안 된 동물 -->
	<select id="selectAdoptList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			aa.adopt_apply_id AS adoptApplyId,
			a.animal_id AS animalId,
			a.animal_category_id AS animalCategoryId,
			a.animal_name AS animalName,
			m.member_id AS memberId,
			m.member_name AS memberName,
			aa.adopt_apply_document_id AS adoptApplyDocumentId,
			DATE(aa.apply_date) AS applyDate,
			DATE(ad.adopt_date) AS adoptDate,
			DATE_ADD(date(ad.adopt_date), INTERVAL 52 week) AS 'regularCk',
			ci.care_info_id AS careInfoId,
			ad.staff_id AS staffId
		FROM adopt AS ad, adopt_apply AS aa, animal AS a, member AS m, animal_category AS ac, care_info AS ci
		<where>
			ad.adopt_apply_id = aa.adopt_apply_id AND aa.animal_id = a.animal_id AND aa.member_id = m.member_id 
			AND ci.animal_category_id = ac.animal_category_id AND ac.animal_category_id = a.animal_category_id
			AND ci.care_sorting = '정기검진'
			AND a.shelter_id = #{shelterId}
			AND (SELECT DISTINCT(cp.animal_id) FROM care_plan AS cp WHERE cp.animal_id = a.animal_id) IS NULL
			<if test="animalId != null">
				AND a.animal_id = #{animalId}
			</if>
		</where>
	</select>
	
	<!-- 입양 신청 서류 보기 -->
	<select id="selectAdoptDocumentOne" parameterType="int" resultType="java.util.Map">
		SELECT 
			m.member_id AS memberId,
			m.member_name AS memberName,
			a.animal_name AS animalName,
			aaq.question AS question,
			aaa.answer AS answer
		FROM adopt_apply_question AS aaq, adopt_apply_document AS aad, adopt_apply_answer AS aaa,
			adopt_apply AS aa, animal AS a, member AS m
		WHERE aaq.adopt_apply_question_id = aaa.adopt_apply_question_id
			AND aaa.adopt_apply_document_id = aad.adopt_apply_document_id
			AND aad.adopt_apply_document_id = aa.adopt_apply_document_id
			AND m.member_id = aa.member_id
			AND a.animal_id = aa.animal_id
			AND aad.adopt_apply_document_id = #{documentId}
		ORDER BY aaq.adopt_apply_question_id ASC;
	</select>
	
	<!-- 입양 승인 -> adopt 테이블에 데이터 추가 -->
	<insert id="insertAdopt" parameterType="java.util.Map">
		INSERT INTO adopt(
			adopt_apply_id,
			staff_id,
			adopt_date
		) VALUE(
			#{adoptApplyId},
			#{staffId},
			NOW()
		);
	</insert>
	
	<!-- 입양 거절 -> adopt_apply 테이블에 rejectdate 추가 -->
	<update id="updateAdoptReject" parameterType="int">
		UPDATE 
			adopt_apply SET apply_reject_date = NOW()
		WHERE adopt_apply_id = #{adoptApplyId};
	</update>
	
	<!-- 입양 신청 서류 등록 -->
	<insert id="insertAdoptDocument">
		INSERT INTO adopt_apply_document() VALUES()
	</insert>
	
	<!-- 입양 신청 서류 내용 저장 -->
	<insert id="insertAdoptForm" parameterType="java.util.Map">
		<selectKey resultType="int" keyProperty="documentId" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO adopt_apply_answer(adopt_apply_document_id, adopt_apply_question_id, answer)
		VALUES (#{documentId}, #{questionId}, #{answer})
	</insert>
	
	<!-- 입양 신청 -->
	<insert id="insertAdoptByMember" parameterType="java.util.Map">
		<selectKey resultType="int" keyProperty="documentId" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO adopt_apply(member_id, animal_id, adopt_apply_document_id, apply_date)
		VALUES (#{memberId}, #{animalId}, #{documentId}, NOW())
	</insert>
	
	<!-- 입양 서류 내용 조회용 -->
	<select id="selectAdoptDocumentByMember" parameterType="String" resultType="java.util.Map">
		SELECT * FROM adopt_document_list WHERE memberId=#{memberId}
	</select>
	
	<!-- 멤버별 입양동물 조회 -->
	<select id="selectAdoptListByMemberId" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT
			al.animal_name animalName,
			al.animal_id animalId, 
			al.species species, 
			s.shelter_name shelterName, 
			s.shelter_id shelterId, 
			DATE(al.adopt_date) adoptDate, 
			af.animal_file_name animalFileName
		FROM adopt_list al 
			INNER JOIN shelter s ON al.shelter_id=s.shelter_id
			LEFT JOIN animal_file af ON al.animal_id=af.animal_id
		WHERE al.member_id = #{memberId}
	</select>
	
	<!-- 입양신청내역 멤버별 -->
	<select id="selectAdoptApplyListByMemberId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			a.animal_id animalId, 
			a.animal_name animalName, 
			DATE(aa.apply_date) applyDate, 
			s.shelter_id shelterId,
			s.shelter_name shelterName,
			case when aa.apply_reject_date IS NOT NULL then '거부' when a.animal_state = '입양' then '승인' ELSE '대기중' END 'checked',
			COUNT(*) over() AS total
		FROM animal a
			INNER JOIN adopt_apply aa ON aa.animal_id=a.animal_id
			INNER JOIN shelter s ON a.shelter_id=s.shelter_id
		WHERE aa.member_id = #{memberId}
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
</mapper>