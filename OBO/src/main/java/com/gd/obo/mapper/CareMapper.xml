<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.obo.mapper.CareMapper">

	<!-- careinfo list 불러오기 -->
	<select id="selectCareInfoList" resultType="java.util.Map">
		SELECT
			ci.care_info_id careInfoId,
			ac.species species,
			ci.care_sorting careSorting,
			ci.care_info_content careInfoContent,
			ci.care_time careTime
		FROM animal_category ac, care_info ci
		<where>
			ac.animal_category_id = ci.animal_category_id
			<if test="searchWord != null">
				AND ci.care_info_content LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="species != null">
				AND ac.species = #{species}
			</if>
			<if test="careSorting != null">
				AND ci.care_sorting = #{careSorting}
			</if>
		</where>
		ORDER BY ci.care_info_id ASC;
	</select>
	
	<!-- care info 분류 선택할 때 사용 -->
	<select id="selectCareInfoByCarePlan" parameterType="int" resultType="java.util.Map">
		SELECT
			care_info_id AS careInfoId,
			CONCAT(care_sorting, '-', care_info_content) AS careSorting
		FROM care_info
		WHERE animal_category_id = #{animalCategoryId} AND care_sorting != '정기검진'
		ORDER BY care_sorting, care_info_content ASC;
	</select>
	
	<!-- 선택한 care info 자동 계산위한 값 -->
	<select id="selectCarePlanDay" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.animal_id AS animalId,
			ci.care_info_id AS careInfoId,
			ci.animal_category_id AS animalCategoryId,
			ci.care_sorting AS careSorting,
			ci.care_info_content AS careInfoContent,
			ci.care_time careTime,
			DATE(ad.adopt_date) AS `입양일`,
			DATE_ADD(date(ad.adopt_date), INTERVAL 52 week) AS `정기검진`,
			DATE_ADD(date(ad.adopt_date), INTERVAL ci.care_time week) AS `careDate`
		FROM animal AS a, care_info AS ci, adopt AS ad, adopt_apply AS aa
		<where>
			a.animal_category_id = ci.animal_category_id
			AND ad.adopt_apply_id = aa.adopt_apply_id
			AND aa.animal_id = a.animal_id
			AND a.shelter_id = #{shelterId}
			AND a.animal_id = #{animalId}
			AND ci.care_info_id = #{careInfoId}
		</where>
	</select>
	
	<select id="selectCarePlanList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			DATEDIFF(cp.care_date, NOW()) AS dDay,
			cp.care_plan_id AS carePlanId,
			a.animal_name AS animalName,
			CONCAT(ci.care_sorting, '-', ci.care_info_content) AS careInfo,
			m.member_id AS memberId,
			m.member_name AS memberName,
			cp.staff_id AS staffId,
			DATE(cp.create_date) AS createDate,
			DATE(cp.care_date) AS careDate
		FROM care_plan AS cp
		LEFT JOIN care_info AS ci ON cp.care_info_id = ci.care_info_id
		LEFT JOIN member AS m ON cp.member_id = m.member_id
		LEFT JOIN animal AS a ON cp.animal_id = a.animal_id
		LEFT JOIN care_record AS cr ON cr.care_plan_id = cp.care_plan_id
		<where>
			cp.care_plan_id NOT IN (SELECT care_plan_id FROM care_record)
			AND a.shelter_id = #{shelterId}
			<if test="limitDate == 14">
				AND DATEDIFF(cp.care_date, NOW()) <![CDATA[<]]>= 14
			</if>
			<if test="searchWord != null and selectOption == 'animal'">
				AND a.animal_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="searchWord != null and selectOption == 'care'">
				AND (ci.care_sorting LIKE CONCAT('%', #{searchWord}, '%') OR ci.care_info_content LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
			<if test="searchWord != null and selectOption == 'member'">
				AND (m.member_id LIKE CONCAT('%', #{searchWord}, '%') OR m.member_name LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
		</where>	
		ORDER BY careDate ASC;
	</select>
	
	<!-- 케어플랜 보기 -> 작성한 케이플랜 -->
	<select id="selectCarePlanAnimalOne" parameterType="int" resultType="java.util.Map">
		SELECT
			CONCAT(ci.care_sorting, '-', ci.care_info_content) AS careInfo,
			DATE(cp.care_date) AS careDate
		FROM care_plan AS cp, care_info AS ci
		WHERE
			cp.care_info_id = ci.care_info_id 
			AND cp.animal_id = #{animalId}
	</select>
	
	<!-- 케어플랜 보기 -> 작성하지 않은 케어플랜 -->
	<select id="selectCarePlanAnimalOneNon" parameterType="int" resultType="java.util.Map">
		SELECT
			a.animal_id AS animalId,
			aa.member_id AS memberId,
			ci.care_info_id AS careInfoId,
			DATE(ad.adopt_date) AS `입양일`,
			CONCAT(ci.care_sorting, '-', ci.care_info_content) AS careInfo,
			DATE_ADD(date(ad.adopt_date), INTERVAL ci.care_time week) AS careDate
		FROM animal AS a, care_info AS ci, adopt AS ad, adopt_apply AS aa
		WHERE
			a.animal_category_id = ci.animal_category_id
			AND ad.adopt_apply_id = aa.adopt_apply_id
			AND aa.animal_id = a.animal_id
			AND a.animal_id = #{animalId}
			AND ci.care_info_id NOT IN (SELECT care_info_id FROM care_plan WHERE animal_id = #{animalId});
	</select>
	
	<select id="selectCareRecordList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.animal_name AS animalName,
			CONCAT(ci.care_sorting, '-', ci.care_info_content) AS careInfo,
			m.member_id AS memberId,
			m.member_name AS memberName,
			cr.staff_id_check AS staffId,
			DATE(cr.record_date) AS recordDate,
			cr.features AS features
		FROM care_plan AS cp, care_info AS ci, member AS m, animal AS a,
			adopt_apply AS aa, adopt AS ad, care_record AS cr
		<where> 
			cp.care_info_id = ci.care_info_id AND cp.animal_id = a.animal_id
			AND cp.member_id = m.member_id AND aa.animal_id = a.animal_id
			AND cp.care_plan_id = cr.care_plan_id
			AND ad.adopt_apply_id = aa.adopt_apply_id
			AND a.shelter_id = #{shelterId}
			<if test="searchWord != null and selectOption == 'animal'">
				AND a.animal_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="searchWord != null and selectOption == 'care'">
				AND (ci.care_sorting LIKE CONCAT('%', #{searchWord}, '%') OR ci.care_info_content LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
			<if test="searchWord != null and selectOption == 'member'">
				AND (m.member_id LIKE CONCAT('%', #{searchWord}, '%') OR m.member_name LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
		</where>
		ORDER BY recordDate DESC;
	</select>
	
	<select id="selectCarePlanOneByList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.animal_name AS animalName,
			CONCAT(a.animal_name, ' : ', ci.care_sorting, '-', ci.care_info_content) AS carePlan,
			cp.care_plan_id AS carePlanId,
			DATE(cp.care_date) AS careDate
		FROM care_plan AS cp, care_info AS ci, animal AS a
		<where>
			cp.care_info_id = ci.care_info_id AND cp.animal_id = a.animal_id
			AND a.shelter_id = #{shelterId}
			AND cp.care_plan_id NOT IN (SELECT cr.care_plan_id FROM care_record AS cr)
			<!-- AND DATEDIFF(cp.care_date , NOW()) <![CDATA[<]]>= 7 : 개발 중엔 기한 상관없이 보이도록 한다. -->
		</where>
	</select>
	
	<select id="selectCarePlanOne" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			a.animal_name AS animalName,
			m.member_id AS memberId,
			m.member_name AS memberName,
			CONCAT(ci.care_sorting, '-', ci.care_info_content) AS careInfo,
			DATE(cp.care_date) AS careDate
		FROM care_plan AS cp, care_info AS ci, member AS m, animal AS a
		WHERE cp.care_info_id = ci.care_info_id AND cp.animal_id = a.animal_id
			AND cp.member_id = m.member_id
			AND a.shelter_id = #{shelterId}
			AND cp.care_plan_id = #{carePlanId}
	</select>
	
	<!-- 케어플랜 추가 -->
	<insert id="insertCarePlan" parameterType="java.util.Map">
		INSERT INTO care_plan(
			animal_id,
			member_id,
			staff_id,
			care_info_id,
			care_date,
			create_date
		) VALUE(
			#{animalId},
			#{memberId},
			#{staffId},
			#{careInfoId},
			#{careDate},
			NOW()
		)
	</insert>
	
	<!-- 케어기록 추가 -->
	<insert id="insertCareRecord" parameterType="java.util.Map">
		INSERT care_record(
			care_plan_id,
			staff_id_check,
			record_date,
			features
		) VALUE(
			#{carePlanId},
			#{staffId},
			NOW(),
			#{features}
		)
	</insert>
</mapper>