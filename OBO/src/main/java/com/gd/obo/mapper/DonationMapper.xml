<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.obo.mapper.DonationMapper">
	<!-- 년도의 달별 /후원 회원이나 보호소 넣을 수 있음.... -->
	<select id="selectFullDonationTotalByMonth" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			SUM(amount) amount, 
			MONTH(donation_date) month 
		FROM full_money_donation_list 
		<where>
			YEAR(donation_date) = #{year}
			<if test="shelterId != 0">
				AND shelter_id = #{shelterId}
			</if>
			<if test="memberId != null">
				AND member_id = #{memberId}
			</if>
		</where>	
		GROUP BY YEAR(donation_date), MONTH(donation_date)
	</select>
	<!-- 달별 후원금 구하기 -->
	<select id="selectTotalDonationByMonth" parameterType="int" resultType="long">
		SELECT SUM(amount) FROM full_money_donation_list WHERE MONTH(donation_date) = #{month}
	</select>
	<!-- 내정보 / 후원내역/ 물품후원 목록 / 상세보기 -->
	<select id="selectDonationItemOne" parameterType="int" resultType="java.util.Map">
		SELECT 
			d.donation_item_list_id donationItemListId, 
			DATE(d.donation_date) donationDate, 
			d.item_name itemName, 
			d.item_quantity itemQuantity, 
			s.shelter_name shelterName,
			i.item_category_name itemCategoryName,
			d.item_description itemDescription
		FROM 
			donation_item_list d 
			INNER JOIN shelter s ON d.shelter_id = s.shelter_id 
			INNER JOIN item_category i ON d.item_category_id=i.item_category_id
		WHERE d.donation_item_list_id = #{donationItemListId}
	</select>
	<select id="selectDonationItemByMemberIdTotal" parameterType="java.lang.String" resultType="int">
		SELECT 
			COUNT(*)
		FROM 
			donation_item_list
		WHERE member_id = #{memberId}
	
	</select>
	<!-- 내정보 / 후원내역 / 물품후원 목록 -->
	<select id="selectDonationItemByMemberId" parameterType="java.util.Map" resultType="java.util.Map" >
		SELECT 
			d.donation_item_list_id donationItemListId, 
			DATE(d.donation_date) donationDate, 
			d.item_name itemName, 
			d.item_quantity itemQuantity, 
			s.shelter_name shelterName, 
			i.item_category_name itemCategoryName
		FROM 
			donation_item_list d 
			INNER JOIN shelter s ON d.shelter_id = s.shelter_id 
			INNER JOIN item_category i ON d.item_category_id=i.item_category_id
		WHERE member_id = #{memberId}
		ORDER BY donationDate DESC
		LIMIT #{beginRow}, #{rowPerPage}	
	</select>
	<!-- 물품후원 insert -->
	<insert id="insertDonationItemList" parameterType="com.gd.obo.vo.DonationItemList">
		INSERT INTO donation_item_list(
			member_id,
			shelter_id,
			item_category_id,
			item_name,
			item_quantity,
			item_description,
			donation_date
		) VALUES(
			#{memberId},
			#{shelterId},
			#{itemCategoryId},
			#{itemName},
			#{itemQuantity},
			#{itemDescription},
			NOW()
		)
	</insert>
	<!-- 물품 후원을 위한 물품카테고리 -->
	<select id="selectItemCategoryList" resultType="com.gd.obo.vo.ItemCategory">
		SELECT 
			item_category_id itemCategoryId, 
			item_category_name itemCategoryName 
		FROM item_category
	</select>
	<!-- 회원별 전체 후원금액 -->
	<select id="selectTotalMoneyByMemberId" resultType="int" parameterType="java.lang.String">
		SELECT SUM(amount) totalDonation FROM full_money_donation_list WHERE member_id = #{memberId}
	</select>
	<select id="selectFullMoneyDonationListByMemberIdTotal" resultType="int" parameterType="java.lang.String">
		SELECT 
			COUNT(*)
		FROM full_money_donation_list 
		WHERE member_id = #{memberId}
	</select>
	<!-- 내정보/후원내역/총후원내역 -->
	<select id="selectFullMoneyDonationListByMemberId" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
			shelter_name shelterName, 
			amount amount, 
			DATE(donation_date) donationDate, 
			kind kind 
		FROM full_money_donation_list 
		WHERE member_id = #{memberId}
		ORDER BY donationDate DESC
		LIMIT #{beginRow}, #{rowPerPage}		
	</select>
	<!-- 내정보/후원내역/정기후원목록 토탈-->
	<select id="selectPeriodicallyDonationByMemberIdTotal" resultType="int" parameterType="java.lang.String">
		SELECT 
			COUNT(*)
		FROM 
			periodically_donation
		WHERE member_id = #{memberId}
		
	</select>
	<!-- 내정보/후원내역/정기후원목록 -->
	<select id="selectPeriodicallyDonationByMemberId" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT 
			p.periodically_donation_id periodicallyDonationId, 
			p.shelter_id shelterId, 
			DATE(p.apply_date) applyDate, 
			DATE(p.end_date) endDate, 
			p.amount amount, 
			s.shelter_name shelterName
		FROM 
			periodically_donation p 
			INNER JOIN shelter s ON p.shelter_id = s.shelter_id
		WHERE p.member_id = #{memberId}
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	<update id="updatePeriodicallyDonationByEndDate" parameterType="int">
		UPDATE periodically_donation SET end_date = NOW() WHERE periodically_donation_id = #{periodicallyDonationId}
	</update>
	<!-- 정기결제 끊기! -->
	<select id="selectPeriodicallyDonationByPeriodicallyDonationId" resultType="java.lang.String" parameterType="int">
		SELECT 
			sid sid 
		FROM 
			periodically_donation 
		WHERE 
			periodically_donation_id = #{periodicallyDonationId}
	</select>
	<!-- 정기결제를 위한 정기결제중 리스트 -->
	<select id="selectPeriodicallyDonationBYEndDateISNULL" resultType="com.gd.obo.vo.PeriodicallyDonation">
		SELECT 
			periodically_donation_id periodicallyDonationId, 
			member_id memberId, 
			shelter_id shelterId, 
			amount amount, 
			sid sid
		FROM 
			periodically_donation 
		WHERE 
			end_date IS NULL
	</select>
	<!-- 정기결제 기록테이블 삽입 -->
	<insert id="insertPeriodicallyDonationList" parameterType="int">
		INSERT periodically_donation_list(
			periodically_donation_id, 
			deposit_date
		) VALUES(
			#{periodicallyDonationId}, 
			NOW()
		)
	</insert>
	<!-- 정기결제 테이블 삽입 -->
	<insert id="insertPeriodicallyDonation" parameterType="com.gd.obo.vo.PeriodicallyDonation">
		<selectKey resultType="int" keyProperty="periodicallyDonationId" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	
		INSERT INTO periodically_donation(
			member_id, 
			shelter_id, 
			apply_date, 
			amount, 
			sid
		) VALUES(
			#{memberId}, 
			#{shelterId}, 
			NOW(), 
			#{amount} ,
			#{sid}
		)
	</insert>
	<insert id="insertDonationMoneyList" parameterType="com.gd.obo.vo.DonationMoneyList">
		INSERT INTO donation_money_list(
			member_id, 
			shelter_id, 
			amount, 
			donation_date
		) VALUES(
			#{memberId}, 
			#{shelterId}, 
			#{amount}, 
			NOW()
		)
	</insert>
	
	<!-- staff 일반물품 리스트 -->
	<select id="selectDonationItemList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			dil.donation_item_list_id AS donationItemListId,
			m.member_id AS memberId,
			m.member_name AS memberName,
			m.member_nickname AS memberNickname,
			dil.shelter_id AS shelterId,
			dil.item_category_id AS itemCategoryId,
			ic.item_category_name AS itemCategoryName,
			DATE(dil.donation_date) AS donationDate,
			dil.item_name AS itemName,
			dil.item_quantity AS itemQuantity,
			dil.item_description AS itemDescription
		FROM donation_item_list AS dil, member AS m, item_category AS ic
		<where>
			dil.member_id = m.member_id AND dil.item_category_id = ic.item_category_id
			AND dil.shelter_id = #{shelterId}
			<if test="searchWord != null and searchSelect == 'member'">
				AND (m.member_id LIKE CONCAT('%', #{searchWord}, '%') OR m.member_name LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
			<if test="searchWord != null and searchSelect == 'itemName'">
				AND dil.item_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="itemCategoryName != null">
				AND ic.item_category_name = #{itemCategoryName}
			</if>
		</where>
		ORDER BY dil.donation_date DESC;
	</select>
	
	<!-- staff 일반후원 리스트 -->
	<select id="selectDonationMoneyNList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			dml.donation_money_list_id AS donationMoneyListId,
			m.member_id AS memberId,
			m.member_name AS memberName,
			m.member_nickname AS memberNickname,
			dml.shelter_id AS shelterId,
			DATE(dml.donation_date) AS donationDate,
			dml.amount AS amount
		FROM donation_money_list AS dml, member AS m
		<where>
			dml.member_id = m.member_id AND dml.shelter_id = #{shelterId}
			<if test="searchWord != null">
				AND (m.member_id LIKE CONCAT('%', #{searchWord}, '%') OR m.member_name LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
		</where>
		ORDER BY dml.donation_date DESC;
	</select>
	
	<!-- staff 정기후원 리스트 -->
	<select id="selectDonationMoneyPList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			pd.periodically_donation_id AS periodicallyDonationId,
			m.member_id AS memberId,
			m.member_name AS memberName,
			m.member_nickname AS memberNickname,
			pd.shelter_id AS shelterId,
			DATE(pd.end_date) AS endDate,
			DATE(pd.apply_date) AS applyDate,
			pd.amount AS amount
		FROM periodically_donation AS pd, member AS m
		<where>
			pd.member_id = m.member_id AND pd.shelter_id = #{shelterId}
			<if test="searchWord != null">
				AND (m.member_id LIKE CONCAT('%', #{searchWord}, '%') OR m.member_name LIKE CONCAT('%', #{searchWord}, '%'))
			</if>
		</where>
		ORDER BY pd.apply_date DESC;
	</select>
	
	<!-- 이번달 후원 받은 금액 -->
	<select id="selectDonationMoneyThisMonth" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			shelter_id AS shelterId,
			SUM(amount) AS 'total',
			DATE_FORMAT(NOW(),'%Y-%m') AS 'thisMonth'
		FROM full_money_donation_list
		WHERE DATE_FORMAT(NOW(),'%Y%m') = DATE_FORMAT(donation_date,'%Y%m')
			AND shelter_id = #{shelterId};
	</select>
	
	<!-- 최근 후원받은 물품 5개 -->
	<select id="selectDonationItemLast" parameterType="int" resultType="java.util.Map">
		SELECT
			ic.item_category_name AS itemCategoryName,
			dil.item_quantity AS itemQuantity,
			DATE(dil.donation_date) AS donationDate
		FROM donation_item_list AS dil, item_category AS ic
		WHERE dil.item_category_id = ic.item_category_id
			AND shelter_id = #{shelterId}
		ORDER BY dil.donation_date DESC
		LIMIT 0, 5;
	</select>
	
	<!-- 후원 금액 기간별 조회 -->
	<select id="selectDonationMoneyByPeriod" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			DATE_FORMAT(donation_date,'%Y-%m') AS 'yearMonth',
			SUM(amount) AS 'total'
		FROM full_money_donation_list
		WHERE shelter_id = #{shelterId}
			AND #{endDate} >= DATE_FORMAT(donation_date,'%Y-%m') AND DATE_FORMAT(donation_date,'%Y-%m') >= #{startDate}
		GROUP BY DATE_FORMAT(donation_date,'%Y-%m')
		ORDER BY DATE_FORMAT(donation_date,'%Y-%m') DESC;
	</select>
	
	<select id="selectDonationItemByPeriod" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			ic.item_category_id AS itemCategoryId,
			ic.item_category_name AS itemCategoryName,
			SUM(dil.item_quantity) AS 'total',
			DATE(MAX(dil.donation_date)) AS donationDate
		FROM donation_item_list AS dil, item_category AS ic
		<where> 
			dil.item_category_id = ic.item_category_id
			AND dil.shelter_id = #{shelterId}
			AND #{endDate} >= DATE_FORMAT(donation_date,'%Y-%m') AND DATE_FORMAT(donation_date,'%Y-%m') >= #{startDate}
			<if test="itemCategoryName != null">
				AND ic.item_category_name = #{itemCategoryName}
			</if>
		</where>
		GROUP BY ic.item_category_id
		ORDER BY itemCategoryName ASC;
	</select>
</mapper>