<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gd.obo.mapper.AnimalMapper">
	<!-- 쉘터별 보호중인 동물의 종수 -->
	<select id="selectAnimalSpeciesCount" parameterType="int" resultType="java.util.Map">
		SELECT 
			COUNT(*) cnt, 
			ac.species species
		FROM animal a
			INNER JOIN animal_category ac ON a.animal_category_id=ac.animal_category_id
		<where>
			a.animal_state = '보호중'
			<if test="shelterId != 0">
				AND shelter_id = #{shelterId}
			</if>
		</where>		
		GROUP BY ac.animal_category_id
	</select>
	<!-- 이번달의 안락사 동물 -->
	<select id="selectEuthanasiaAnimalCountByMonth" parameterType="java.util.Map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM animal 
		<where> 
			animal_state = '안락사'
			AND MONTH(animal_exit_date)= #{month}
			<if test="shelterId != 0">
				AND shelter_id = #{shelterId}
			</if>
		</where>
	</select>
	<!-- 이번달의 입양 동물 -->
	<select id="selectAdoptAnimalCountByMonth" parameterType="java.util.Map" resultType="int">
		SELECT 
			COUNT(*) 
		FROM animal 
		<where> 
			animal_state = '입양'
			AND MONTH(animal_exit_date)= #{month}
			<if test="shelterId != 0">
				AND shelter_id = #{shelterId}
			</if>
		</where>
	</select>
	<!-- 보호중인 동물의 수 -->
	<select id="selectAnimalCountByProtect" parameterType="int" resultType="int">
		SELECT 
			COUNT(*) 
		FROM animal 
		<where> 
			animal_state = '보호중' 
			<if test="shelterId != 0">
				AND shelter_id = #{shelterId}
			</if>
		</where>
	</select>
	<!-- 안락사 실행 -->
   <update id="updateAnimalByEuthanasia" parameterType="java.util.List">
      UPDATE 
         animal SET animal_state = '안락사',
         animal_exit_date= NOW() 
      WHERE animal_id IN
          <foreach item="animalId" collection="animalId" open="(" separator="," close=")">
                #{animalId}
           </foreach>
   </update>
   <!-- 안락사 리스트 뽑기 -->
   <select id="selectAnimalListByEuthanasia" resultType="int">
       SELECT 
            a.animal_id animalId
      FROM animal AS a
          INNER JOIN shelter s ON s.shelter_id = a. shelter_id
       WHERE (DATE_ADD(date(a.animal_enter_date), INTERVAL s.protect_duration DAY)) = DATE(NOW())
   </select>
	
	<!-- Animal 파일 리스트 -->
	<select id="selectAnimalFileByAnimal" resultType="com.gd.obo.vo.AnimalFile" parameterType="Integer">
		SELECT
			animal_file_id animalFileId,
			animal_id animalId,
			animal_file_name animalFileName,
			animal_file_size animalFileSize,
			animal_file_ext animalFileExt,
			animal_file_date animalFileDate
		FROM
			animal_file
		WHERE
			animal_id = #{animalId}		
	</select>
	
	
	<!-- Animal 수정 -->
	<update id="updateAnimal" parameterType="com.gd.obo.vo.Animal">
		UPDATE animal
		SET
			animal_name = #{animalName},
			animal_age = #{animalAge},
			animal_sex = #{animalSex},
			animal_weight = #{animalWeight},
			animal_kind = #{animalKind},
			animal_find_place = #{animalFindPlace},
			animal_note = #{animalNote},
			animal_state = #{animalState}
		WHERE animal_id = #{animalId}
	</update>
	
	
	<!-- 카테고리 리스트 -->
	<select id="selectAnimalCategoryList" resultType="java.util.Map">
		SELECT 
			animal_category_id animalCategoryId,
			species
		FROM animal_category
	</select>
	

	<!-- Animal 추가 --> <!-- 더 추가해야함, 기본적인것만 추가 -->
	<insert id="insertAnimal" parameterType="com.gd.obo.vo.Animal">
		<selectKey keyProperty="animalId" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO animal(
			animal_category_id,
			shelter_id,
			animal_name,
			animal_age,
			animal_sex,
			animal_weight,
			animal_kind,
			animal_find_place,
			animal_note,
			animal_enter_date,
			animal_state,
			animal_introduce
		) VALUES (
			#{animalCategoryId},
			#{shelterId},
			#{animalName},
			#{animalAge},
			#{animalSex},
			#{animalWeight},
			#{animalKind},
			#{animalFindPlace},
			#{animalNote},
			NOW(),
			#{animalState},
			#{animalIntroduce}
		)
	</insert>
	
	
	<!-- Animal 상세보기 --> 
	<select id="selectAnimalOne" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT 
   			a.animal_id animalId,
   			a.animal_category_id animalCategoryId,
		    a.shelter_id shelterId,
		    a.animal_name animalName,
		    ac.species species,
		    a.animal_age animalAge,
		    a.animal_sex animalSex,
		    a.animal_weight animalWeight,
		    a.animal_kind animalKind,
		    a.animal_find_place animalFindPlace,
		    a.animal_note animalNote,
		    a.animal_enter_date animalEnterDate,
		    a.animal_exit_date animalExitDate,
		    a.animal_introduce animalIntroduce,
		    a.animal_state animalState,
		    af.animal_file_name animalFileName,
		    s.shelter_name shelterName,
		    s.protect_duration duration
		FROM animal AS a
    	LEFT JOIN animal_file AS af ON af.animal_id = a.animal_id
    	INNER JOIN animal_category AS ac ON ac.animal_category_id = a.animal_category_id
    	INNER JOIN shelter s ON a.shelter_id = s.shelter_id
    	WHERE
    		a.animal_id = #{animalId} 
	</select>	
	
	<!-- 직원이 자기 보호소 Animal 리스트 조회 --> <!-- 직원 로그인 후 쿼리 수정. -->
	<select id="selectAnimalList" resultType="java.util.Map" parameterType="java.util.Map"> 
		SELECT 
   			a.animal_id animalId,
		    a.shelter_id shelterId,
		    af.animal_file_name animalFileName,
		    ac.species species,
		    a.animal_name animalName,
		    a.animal_age animalAge,
		    a.animal_sex animalSex,
		    a.animal_weight animalWeight,
		    a.animal_kind animalKind,
		    a.animal_find_place animalFindPlace,
		    a.animal_enter_date animalEnterDate,
		    a.animal_state animalState,
		    s.shelter_name shelterName,
		    s.protect_duration duration,
		    (DATE_ADD(a.animal_enter_date, INTERVAL s.protect_duration DAY)) expectedDay
		FROM animal AS a
    	LEFT JOIN animal_file AS af ON af.animal_id = a.animal_id
    	INNER JOIN animal_category AS ac ON ac.animal_category_id = a.animal_category_id
    	INNER JOIN shelter s ON s.shelter_id = a. shelter_id
		<where>
			<if test="shelterId != 0">
				AND a.shelter_id = #{shelterId}
			</if>
			<if test = "searchWord != null">
				AND a.animal_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="species != null">
				AND ac.species = #{species}
			</if>
		</where>    
		ORDER BY expectedDay
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
		<!-- 회원용 동물 리스트, 입양 갔거나 보호 종료된 애들은 안 띄워주기 위해서 새로 만듦.-->
	<select id="selectMemberAnimalList" resultType="java.util.Map" parameterType="java.util.Map"> 
		SELECT 
   		a.animal_id animalId,
		    a.shelter_id shelterId,
		    af.animal_file_name animalFileName,
		    ac.species species,
		    a.animal_name animalName,
		    a.animal_age animalAge,
		    a.animal_sex animalSex,
		    a.animal_weight animalWeight,
		    a.animal_kind animalKind,
		    a.animal_find_place animalFindPlace,
		    a.animal_enter_date animalEnterDate,
		    a.animal_state animalState,
		    s.shelter_name shelterName,
		    s.protect_duration duration,
		    (DATE_ADD(a.animal_enter_date, INTERVAL s.protect_duration DAY)) expectedDay
		FROM animal AS a
    	LEFT JOIN animal_file AS af ON af.animal_id = a.animal_id
    	INNER JOIN animal_category AS ac ON ac.animal_category_id = a.animal_category_id
    	INNER JOIN shelter s ON s.shelter_id = a. shelter_id
		<where>
			a.animal_state='보호중' AND (DATE_ADD(a.animal_enter_date, INTERVAL s.protect_duration DAY)) > NOW()
			<if test="shelterId != 0">
				AND a.shelter_id = #{shelterId}
			</if>
			<if test = "searchWord != null">
				AND a.animal_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="species != null">
				AND ac.species = #{species}
			</if>
		</where>    
		ORDER BY expectedDay
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- total -->
	<select id="selectAnimalTotal" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*)
		FROM animal a JOIN animal_category AS ac ON ac.animal_category_id = a.animal_category_id
		<where>
			<if test="shelterId != 0">
				AND shelter_id = #{shelterId}
			</if>
			<if test ="searchWord != null">
				AND a.animal_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
			<if test="species != null">
				AND ac.species = #{species}
			</if>
		</where>
	</select>	
	
	<!-- 동물 좋아요 -->
	<insert id="insertAnimalLike" parameterType="java.util.Map">
		INSERT INTO animal_like(animal_id, member_id, update_date) VALUES (#{animalId}, #{memberId}, NOW())
	</insert>
	
	<!-- 동물 좋아요 중복조회 -->
	<select id="selectAnimalLikeByMember" resultType="int" parameterType="java.util.Map">
		SELECT COUNT(*) FROM animal_like WHERE member_id=#{memberId} AND animal_id=#{animalId}
	</select>
</mapper>